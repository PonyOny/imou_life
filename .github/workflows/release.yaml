name: Test and publish a new release

on:
  push:
    branches:
      - main
      - master
  pull_request:

env:
  DEFAULT_PYTHON: 3.9

jobs:
  pre-commit:
    runs-on: "ubuntu-latest"
    name: Pre-commit
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3.0.2

      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v4.2.0
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: Upgrade pip
        run: |
          pip install --constraint=.github/workflows/constraints.txt pip
          pip --version

      - name: Install Python modules
        run: |
          pip install --constraint=.github/workflows/constraints.txt pre-commit black flake8 isort

      - name: Run pre-commit on all files
        run: |
          pre-commit run --all-files --show-diff-on-failure --color=always

  tests:
    runs-on: "ubuntu-latest"
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]
    name: Run tests
    steps:
      - name: Check out code from GitHub
        uses: "actions/checkout@v2.3.4"
      - name: Setup Python ${{ matrix.python-version }}
        uses: "actions/setup-python@v2.2.1"
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install requirements
        run: |
          pip install --constraint=.github/workflows/constraints.txt pip
          pip install -r requirements_test.txt
      - name: Tests suite
        run: |
          pytest \
            --timeout=9 \
            --durations=10 \
            -n auto \
            -p no:sugar \
            tests
      - name: codecov
        uses: codecov/codecov-action@v2

  hacs:
    runs-on: "ubuntu-latest"
    name: HACS
    steps:
      - name: Check out the repository
        uses: "actions/checkout@v3.0.2"

      - name: HACS validation
        uses: "hacs/action@22.5.0"
        with:
          category: "integration"
          ignore: brands

  hassfest:
    runs-on: "ubuntu-latest"
    name: Hassfest
    steps:
      - name: Check out the repository
        uses: "actions/checkout@v3.0.2"

      - name: Hassfest validation
        uses: "home-assistant/actions/hassfest@master"

  draft_release:
    name: Release Drafter
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3.0.2

      - name: Get integration name
        id: information
        shell: bash
        run: |
          name=$(find custom_components/ -type d -maxdepth 1 | tail -n 1 | cut -d "/" -f2)
          echo "name: $name"
          echo "::set-output name=name::$name"

      - name: Get integration version from manifest
        id: version
        shell: bash
        run: |
          version=$(jq -r '.version' custom_components/${{ steps.information.outputs.name }}/manifest.json)
          echo "version: $version"
          echo "::set-output name=version::$version"

      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          validation_depth: 10
          version: ${{ steps.version.outputs.version }}
          path: ./CHANGELOG.md

      - name: Create zip file for the integration
        run: |
          cd "${{ github.workspace }}/custom_components/${{ steps.information.outputs.name }}"
          zip ${{ steps.information.outputs.name }}.zip -r ./

      - name: draft github release
        id: draft_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ steps.version.outputs.version }}
          tag_name: ${{ steps.version.outputs.version }}
          body: ${{ steps.changelog_reader.outputs.changes }}
          files: "${{ github.workspace }}/custom_components/${{ steps.information.outputs.name }}/${{ steps.information.outputs.name }}.zip"
          draft: true
          prerelease: false
